{"version":3,"file":"static/js/85.c843a127.chunk.js","mappings":"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","sources":["components/ContactItem/ContactItem.styled.jsx","components/ContactItem/ContactItem.jsx","components/ContactList/ContactList.styled.jsx","redux/contacts/selectors.js","redux/filter/selectors.js","components/ContactList/ContactList.jsx","components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","pages/Contacts/Contacts.styled.jsx","pages/Contacts/Contacts.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ContactsList = styled.div`\n  display: flex;\n  gap: 20px;\n  width: 100%;\n  align-items: center;\n`;\n","import PropTypes from 'prop-types';\nimport { Typography } from '@mui/material';\nimport { ContactsList } from './ContactItem.styled';\n\nexport const ContactItem = ({ contact: { name, number } }) => {\n  return (\n    <ContactsList>\n      <Typography variant=\"body1\">{name}</Typography>\n      <Typography variant=\"body2\">{number}</Typography>\n    </ContactsList>\n  );\n};\n\nContactItem.propTypes = {\n  contact: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n  }).isRequired,\n};\n","import styled from 'styled-components';\n\nexport const StyledItem = styled.li`\n  display: flex;\n  justify-content: space-between;\n  padding: 10px;\n  gap: 10px;\n  margin: 10px;\n`;\n","export const selectContacts = state => state.contacts.items;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n","export const selectFiltredContacts = state => {\n  return state.contacts.items.filter(contact =>\n    contact.name.toLowerCase().includes(state.filter)\n  );\n};\n","import { ContactItem } from 'components/ContactItem/ContactItem';\nimport { StyledItem } from './ContactList.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectError, selectIsLoading } from 'redux/contacts/selectors';\nimport { deleteContact, fetchContacts } from 'redux/contacts/operations';\nimport { useEffect } from 'react';\nimport { MagnifyingGlass } from 'react-loader-spinner';\nimport { Button, Typography } from '@mui/material';\nimport { selectFiltredContacts } from 'redux/filter/selectors';\n\nexport const ContactList = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  const filtredContacts = useSelector(selectFiltredContacts);\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n  return (\n    <ul>\n      {isLoading && !error && (\n        <div>\n          <MagnifyingGlass\n            visible={true}\n            height={80}\n            width={80}\n            ariaLabel=\"MagnifyingGlass-loading\"\n            glassColor=\"#c0efff\"\n            color=\"#e15b64\"\n          />\n        </div>\n      )}\n      <ul>\n        {filtredContacts.map(contact => (\n          <StyledItem key={contact.id}>\n            <ContactItem contact={contact} />\n            <Button\n              variant=\"outlined\"\n              color=\"secondary\"\n              onClick={() => dispatch(deleteContact(contact.id))}\n            >\n              Delete\n            </Button>\n          </StyledItem>\n        ))}\n      </ul>\n      {error && (\n        <Typography variant=\"body1\">Sorry, an error occurred.</Typography>\n      )}\n    </ul>\n  );\n};\n","import styled from 'styled-components';\n\nexport const ErrorText = styled.div`\n  color: red;\n  font-size: 14px;\n  margin-top: 5px;\n`;\n","import { Formik, Field, ErrorMessage, Form } from 'formik';\nimport * as Yup from 'yup';\nimport { ErrorText } from './ContactForm.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/contacts/operations';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport { toast } from 'react-hot-toast';\nimport Card from '@mui/material/Card';\nimport Button from '@mui/material/Button';\nimport Grid from '@mui/material/Grid';\nimport TextField from '@mui/material/TextField';\n\nexport const ContactForm = () => {\n  const validationSchema = Yup.object().shape({\n    name: Yup.string()\n      .matches(\n        /^[a-zA-Z\\s'-]+$/,\n        'Name may contain only letters, apostrophe, dash, and spaces'\n      )\n      .required('Name is required'),\n    number: Yup.string()\n      .matches(\n        /^\\+?[0-9\\s()-]+$/,\n        'Phone number must be digits and can contain spaces, dashes, parentheses, and can start with +'\n      )\n      .required('Phone number is required'),\n  });\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  return (\n    <Formik\n      initialValues={{\n        name: '',\n        number: '',\n      }}\n      onSubmit={(values, { resetForm }) => {\n        const normalizeName = values.name.toLowerCase();\n        if (\n          contacts.find(contact => contact.name.toLowerCase() === normalizeName)\n        ) {\n          return toast.error(`${values.name} is already in contact`, {\n            position: 'top-center',\n          });\n        }\n        dispatch(addContact(values));\n        resetForm();\n\n        toast.success('Contact added successfully', {\n          position: 'top-center',\n        });\n      }}\n      validationSchema={validationSchema}\n    >\n      <Card\n        sx={{\n          maxWidth: 400,\n          display: 'flex',\n          margin: '0 auto',\n          marginTop: '80px',\n        }}\n      >\n        <Form>\n          <h1>Phonebook</h1>\n          <Grid container spacing={2}>\n            <Grid item xs={12}>\n              <Field\n                as={TextField}\n                type=\"text\"\n                name=\"name\"\n                label=\"Name\"\n                title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                required\n                variant=\"outlined\"\n                helperText={<ErrorMessage name=\"name\" component={ErrorText} />}\n                InputProps={{\n                  style: { width: '400px' },\n                }}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <Field\n                as={TextField}\n                type=\"tel\"\n                name=\"number\"\n                label=\"Phone\"\n                title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n                required\n                variant=\"outlined\"\n                helperText={\n                  <ErrorMessage name=\"number\" component={ErrorText} />\n                }\n                InputProps={{\n                  style: { width: '400px' },\n                }}\n              />\n            </Grid>\n          </Grid>\n          <Button type=\"submit\" variant=\"contained\" color=\"primary\" fullWidth>\n            Add contact\n          </Button>\n        </Form>\n      </Card>\n    </Formik>\n  );\n};\n","import { useDispatch } from 'react-redux';\nimport { getUserInput } from 'redux/filter/slice';\nimport { TextField } from '@mui/material';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const handleInputChange = e => {\n    dispatch(getUserInput(e.currentTarget.value.toLowerCase()));\n  };\n\n  return (\n    <TextField\n      sx={{\n        marginTop: '10px',\n      }}\n      label=\"Find contact by name\"\n      variant=\"outlined\"\n      onChange={handleInputChange}\n      fullWidth\n    />\n  );\n};\n","import styled from 'styled-components';\n\nexport const StyledDiv = styled('div')`\n  width: 400px;\n  margin: 0 auto;\n  margin-top: 20px;\n`;\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { selectContacts, selectIsLoading } from 'redux/contacts/selectors';\nimport { GlobalStyle } from 'components/GlobalStyles';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { Filter } from 'components/Filter/Filter';\nimport { FullPageLoader } from 'components/Loader/Loader';\nimport { StyledDiv } from './Contacts.styled';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const contacts = useSelector(selectContacts);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <title>Your contacts</title>\n      <div>{isLoading && <FullPageLoader />}</div>\n      <GlobalStyle />\n      <ContactForm />\n      <StyledDiv>\n        <h2>Your contacts</h2>\n        {contacts.length ? (\n          <>\n            <Filter />\n            <ContactList />\n          </>\n        ) : (\n          <div>\n            <p>You don't have any contacts added yet.</p>\n          </div>\n        )}\n      </StyledDiv>\n    </>\n  );\n}\n"],"names":["ContactsList","styled","div","_templateObject","_taggedTemplateLiteral","ContactItem","_ref","_ref$contact","contact","name","number","_jsxs","children","_jsx","Typography","variant","StyledItem","li","selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","selectFiltredContacts","filter","toLowerCase","includes","ContactList","dispatch","useDispatch","useSelector","filtredContacts","useEffect","fetchContacts","MagnifyingGlass","visible","height","width","ariaLabel","glassColor","color","map","Button","onClick","deleteContact","id","ErrorText","ContactForm","validationSchema","Yup","shape","matches","required","Formik","initialValues","onSubmit","values","resetForm","normalizeName","find","toast","concat","position","addContact","success","Card","sx","maxWidth","display","margin","marginTop","Form","Grid","container","spacing","item","xs","Field","as","TextField","type","label","title","helperText","ErrorMessage","component","InputProps","style","fullWidth","Filter","onChange","e","getUserInput","currentTarget","value","StyledDiv","Contacts","_Fragment","FullPageLoader","GlobalStyle","length"],"sourceRoot":""}